AWSTemplateFormatVersion: 2010-09-09
Description: >
    Deployment Resources
Parameters:
    AppName:
        Type: String
    SecretValue:
        Description: Random value used to help secure the GitHub Webhook
        Type: String
        MaxLength: 100
        MinLength: 1
    GitHubOAuthToken:
        Description: GitHub personal access token to use to retrieve the source code
        Type: String
    GitHubOwner:
        Description: GitHub user or organization name
        Type: String
    RepositoryName:
        Description: GitHub repository name
        Type: String
    BranchName:
        Type: String
        Default: master
    CodeBuildImage:
        Type: String
        Default: aws/codebuild/nodejs:10

Resources:
    #
    # CI/CD Pipeline
    #
    CodePipeline:
        Type: AWS::CodePipeline::Pipeline
        Properties:
            Name: !Sub "${AWS::StackName}-pipeline"
            ArtifactStore:
                Location: !Ref CodePipelineArtifactStoreBucket
                Type: S3
            RoleArn: !GetAtt "CodePipelineServiceRole.Arn"
            Stages:
                - Name: Source
                  Actions:
                    - Name: GitHubSource
                      ActionTypeId:
                        Category: Source
                        Owner: ThirdParty
                        Provider: GitHub
                        Version: "1"
                      Configuration:
                        Owner: !Ref GitHubOwner
                        Repo: !Ref RepositoryName
                        Branch: !Ref BranchName
                        OAuthToken: !Ref GitHubOAuthToken
                        PollForSourceChanges: false
                      OutputArtifacts:
                        - Name: SourceOutput
                      RunOrder: 1
                - Name: Build
                  Actions:
                    - Name: CodeBuild
                      ActionTypeId:
                        Category: Build
                        Owner: AWS
                        Provider: CodeBuild
                        Version: "1"
                      Configuration:
                        ProjectName: !Ref CodeBuild
                      InputArtifacts:
                          - Name: SourceOutput
                      OutputArtifacts:
                          - Name: BuildOutput
                          - Name: BundleOutput
                - Name: Deploy
                  Actions:
                    - Name: CreateChangeSet
                      ActionTypeId:
                        Category: Deploy
                        Owner: AWS
                        Provider: CloudFormation
                        Version: "1"
                      Configuration:
                        ActionMode: CHANGE_SET_REPLACE
                        RoleArn: !GetAtt "CloudformationServiceRole.Arn"
                        StackName: !Ref AppName
                        ChangeSetName: !Sub "UpdatePreview-${AWS::StackName}"
                        TemplatePath: BuildOutput::template-output.yaml
                        Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                      InputArtifacts:
                          - Name: BuildOutput
                      RunOrder: 1
                    - Name: ExecuteChangeSet
                      ActionTypeId:
                        Category: Deploy
                        Owner: AWS
                        Provider: CloudFormation
                        Version: "1"
                      Configuration:
                        ActionMode: CHANGE_SET_EXECUTE
                        RoleArn: !GetAtt "CloudformationServiceRole.Arn"
                        StackName: !Ref AppName
                        ChangeSetName: !Sub "UpdatePreview-${AWS::StackName}"
                      OutputArtifacts:
                          - Name: CfOutput
                      RunOrder: 2
                    - Name: S3Upload
                      ActionTypeId:
                        Category: Deploy
                        Owner: AWS
                        Provider: S3
                        Version: "1"
                      Configuration:
                        BucketName: !Ref WebsiteS3Bucket
                        Extract: true
                      InputArtifacts:
                          - Name: BundleOutput
                      RunOrder: 3

    CodeBuild:
        Type: AWS::CodeBuild::Project
        Properties:
            Artifacts:
                Type: CODEPIPELINE
            Environment:
                Type: LINUX_CONTAINER
                ComputeType: BUILD_GENERAL1_SMALL
                Image: aws/codebuild/standard:2.0
                EnvironmentVariables:
                    - Name: ARTIFACT_BUCKET_NAME
                      Value: !Ref CodePipelineArtifactStoreBucket
            Source:
                Type: CODEPIPELINE
            ServiceRole: !Ref CodeBuildServiceRole
    
    CodePipelineArtifactStoreBucket:
        Type: 'AWS::S3::Bucket'
    
    #
    # GitHub Source
    #
    CodePipelineWebhook:
        Type: AWS::CodePipeline::Webhook
        Properties:
            Authentication: GITHUB_HMAC
            AuthenticationConfiguration:
                SecretToken: !Ref SecretValue
            Filters:
                - JsonPath: $.ref
                  MatchEquals: refs/heads/{Branch}
            TargetPipeline: !Ref CodePipeline
            TargetAction: GitHubSource
            TargetPipelineVersion: !GetAtt CodePipeline.Version
            RegisterWithThirdParty: true
    
    #
    # Service Roles
    #
    CloudformationServiceRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: !Sub "${AWS::StackName}-cloudformation-service-role"
            Path: /
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    Action:
                        - 'sts:AssumeRole'
                    Effect: Allow
                    Principal:
                        Service:
                        - cloudformation.amazonaws.com
            Policies:
                -
                    PolicyName: "CloudFormationBasePolicy"
                    PolicyDocument:
                        Version: "2012-10-17"
                        Statement:
                            -
                                Effect: "Allow"
                                Action:
                                    - 'iam:GetRole'
                                    - 'iam:DeleteRolePolicy'
                                    - 'iam:PutUserPolicy'
                                    - 'iam:PassRole'
                                    - 'iam:CreateRole'
                                    - 'iam:DeleteRole'
                                    - 'iam:DetachRolePolicy'
                                    - 'iam:AttachRolePolicy'
                                    - 'iam:PutRolePolicy'
                                    - 'cloudformation:DescribeStacks'
                                    - 'cloudformation:DescribeChangeSet'
                                    - 'cloudformation:CreateChangeSet'
                                    - 'cloudformation:ExecuteChangeSet'
                                    - 'cloudformation:DeleteChangeSet'
                                    - 'lambda:*'
                                    - 'apigateway:*'
                                    - 'events:*'
                                    - 'logs:*'
                                    - 'dynamodb:*'
                                    - 's3:*'
                                    - 'codedeploy:*'
                                    - 'cloudfront:*'
                                    - 'acm:ListCertificates'
                                Resource: "*"

    CodePipelineServiceRole:
        Type: AWS::IAM::Role
        Properties:
            Path: /
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    Action:
                        - 'sts:AssumeRole'
                    Effect: Allow
                    Principal:
                        Service:
                        - codepipeline.amazonaws.com
            Policies:
                -
                    PolicyName: "CodePipelineServices"
                    PolicyDocument:
                        Version: "2012-10-17"
                        Statement:
                            -
                                Effect: "Allow"
                                Action:
                                    - 'iam:PassRole'
                                Resource:
                                    - !GetAtt CodeBuildServiceRole.Arn
                                    - !GetAtt CloudformationServiceRole.Arn
                            -
                                Effect: "Allow"
                                Action:
                                    - 's3:Get*'
                                    - 's3:List*'
                                    - 's3:Put*'
                                Resource: 
                                    - !GetAtt "CodePipelineArtifactStoreBucket.Arn"
                                    - !Join
                                        - ''
                                        - - !GetAtt "CodePipelineArtifactStoreBucket.Arn"
                                          - '/*'
                                    - !GetAtt "WebsiteS3Bucket.Arn"
                                    - !Join
                                        - ''
                                        - - !GetAtt "WebsiteS3Bucket.Arn"
                                          - '/*'
                            -
                                Effect: "Allow"
                                Action:
                                    - 'codebuild:StartBuild'
                                    - 'codebuild:BatchGetBuilds'
                                Resource:
                                    - !GetAtt "CodeBuild.Arn"
                            -
                                Effect: "Allow"
                                Action:
                                    - cloudformation:CreateStack
                                    - cloudformation:DeleteStack
                                    - cloudformation:DescribeStacks
                                    - cloudformation:UpdateStack
                                    - cloudformation:CreateChangeSet
                                    - cloudformation:DeleteChangeSet
                                    - cloudformation:DescribeChangeSet
                                    - cloudformation:ExecuteChangeSet
                                    - cloudformation:SetStackPolicy
                                    - cloudformation:ValidateTemplate
                                Resource:
                                    - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}"
                                    - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*"
                                    - !Sub
                                        - "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AppName}"
                                        - { AppName: !Ref AppName }
                                    - !Sub
                                        - "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AppName}/*"
                                        - { AppName: !Ref AppName }

    CodeBuildServiceRole:
        Type: AWS::IAM::Role
        Properties:
            Path: /
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    - Effect: Allow
                      Principal:
                          Service:
                          - codebuild.amazonaws.com
                      Action:
                          - 'sts:AssumeRole'
            Policies:
                -
                    PolicyName: CodeBuildServices
                    PolicyDocument:
                        Version: "2012-10-17"
                        Statement:
                            -
                                Effect: "Allow"
                                Action:
                                    - 'logs:CreateLogGroup'
                                    - 'logs:CreateLogStream'
                                    - 'logs:PutLogEvents'
                                Resource: "*"
                            - 
                                Effect: "Allow"
                                Action:
                                    - 's3:Get*'
                                    - 's3:Put*'
                                    - 's3:List*'
                                Resource:
                                    - !GetAtt "CodePipelineArtifactStoreBucket.Arn"
                                    - !Join
                                        - ''
                                        - - !GetAtt "CodePipelineArtifactStoreBucket.Arn"
                                          - '/*'
    
    #
    # SPA Resources
    #
    CloudFrontDistribution:
        Type: AWS::CloudFront::Distribution
        Properties:
            DistributionConfig:
                DefaultCacheBehavior:
                    ForwardedValues:
                        QueryString: false
                    ViewerProtocolPolicy: redirect-to-https
                    TargetOriginId: S3WebsiteOrigin
                DefaultRootObject: index.html
                Enabled: true
                Origins:
                    - DomainName: !Sub
                        - "${BucketName}.s3.amazonaws.com"
                        - { BucketName: !Ref WebsiteS3Bucket }
                      Id: S3WebsiteOrigin
                      S3OriginConfig:
                          OriginAccessIdentity: !Join
                              - ""
                              - - origin-access-identity/cloudfront/
                                - !Ref CloudFrontAccessIdentity
                PriceClass: PriceClass_100
                CustomErrorResponses:
                    -
                        ErrorCode: 403
                        ResponseCode: 200
                        ResponsePagePath: "/index.html"
    CloudFrontAccessIdentity:
        Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
        Properties:
            CloudFrontOriginAccessIdentityConfig:
                Comment: WebsiteCloudFrontAccessIdentity

    WebsiteS3Bucket:
        Type: AWS::S3::Bucket
        Properties: 
            AccessControl: PublicRead
            WebsiteConfiguration:
                ErrorDocument: index.html
                IndexDocument: index.html

    WebsiteS3BucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties: 
            Bucket: !Ref WebsiteS3Bucket
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    -
                        Sid: PublicReadGetObject
                        Effect: Allow
                        Principal: "*"
                        Action:
                            - s3:GetObject
                        Resource: !Sub
                            - "arn:aws:s3:::${BucketName}/*"
                            - { BucketName: !Ref WebsiteS3Bucket }
Outputs:
    CloudFrontUrl:
        Value: !Sub
            - "https://${Domain}"
            - { Domain: !GetAtt "CloudFrontDistribution.DomainName" }